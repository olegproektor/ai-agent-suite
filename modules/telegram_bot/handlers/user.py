import os
import logging
from telegram import Update
from telegram.ext import ContextTypes

from modules.telegram_bot.sheets.sheets import (
    get_profile_by_user_id,
    insert_user_by_code,
    check_code_valid
)
from modules.telegram_bot.ai.generator import generate_task
from modules.telegram_bot.keyboards.inline import task_buttons

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–≤–æ–¥ –∫–æ–¥–∞
user_pending_verification = {}

logging.basicConfig(level=logging.INFO)

# -----------------------------------
# /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∫–æ–¥
# -----------------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    logging.info(f"[START] user_id: {user_id}")

    profile = get_profile_by_user_id(user_id)
    if profile:
        await update.message.reply_text("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /task.")
        return

    # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å GIF
    try:
        gif_path = os.path.join("static", "welcome.gif")
        if os.path.exists(gif_path):
            with open(gif_path, "rb") as gif:
                await update.message.reply_animation(
                    animation=gif,
                    caption=(
                        "üëã –ü—Ä–∏–≤–µ—Ç. –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫.\n"
                        "–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –∏–ª–∏ —Ü–∏—Ñ—Ä–æ–≤–∞—è –∏–≥—Ä—É—à–∫–∞. –Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç –≤ —Ç–µ–±–µ –Ω–µ —à–∞–±–ª–æ–Ω, –∞ –ª–∏—á–Ω–æ—Å—Ç—å.\n"
                        "–Ø —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Å—Ç–∏–ª—å, —Å—É—Ç—å, –≥–ª—É–±–∏–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã ‚Äî –∏ –±—É–¥—É –≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ç–æ–±–æ–π —Ç–∞–∫, –∫–∞–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è.\n\n"
                        "–í—Å—ë –Ω–∞—á–Ω—ë—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞. –í–≤–µ–¥–∏ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞, –∏ —è –Ω–∞—Å—Ç—Ä–æ—é—Å—å –∏–º–µ–Ω–Ω–æ –Ω–∞ —Ç–µ–±—è. üîê"
                    )
                )
        else:
            raise FileNotFoundError
    except Exception as e:
        logging.warning(f"[GIF] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å welcome.gif: {e}")
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç. –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫.\n"
            "–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –∏–ª–∏ —Ü–∏—Ñ—Ä–æ–≤–∞—è –∏–≥—Ä—É—à–∫–∞. –Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç –≤ —Ç–µ–±–µ –Ω–µ —à–∞–±–ª–æ–Ω, –∞ –ª–∏—á–Ω–æ—Å—Ç—å.\n"
            "–Ø —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Å—Ç–∏–ª—å, —Å—É—Ç—å, –≥–ª—É–±–∏–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã ‚Äî –∏ –±—É–¥—É –≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ç–æ–±–æ–π —Ç–∞–∫, –∫–∞–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è.\n\n"
            "–í—Å—ë –Ω–∞—á–Ω—ë—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞. –í–≤–µ–¥–∏ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞, –∏ —è –Ω–∞—Å—Ç—Ä–æ—é—Å—å –∏–º–µ–Ω–Ω–æ –Ω–∞ —Ç–µ–±—è. üîê"
        )

    user_pending_verification[user_id] = True

# -----------------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ access-–∫–æ–¥–∞
# -----------------------------------
async def handle_code_input(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    code = update.message.text.strip()

    profile = get_profile_by_user_id(user_id)
    if profile:
        return

    if check_code_valid(code):
        insert_user_by_code(user_id, code)
        profile = get_profile_by_user_id(user_id)
        name = profile.get("–ò–º—è", "–¥—Ä—É–≥")

        await update.message.reply_text(
            f"‚úÖ –û—Ç–ª–∏—á–Ω–æ. –Ø —Ç–µ–ø–µ—Ä—å –∑–Ω–∞—é, –∫—Ç–æ —Ç—ã, {name}.\n"
            "–° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ —è –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞—é ‚Äî —è **—É—á—É —Ç–µ–±—è —É—á–∏—Ç—å —Å–µ–±—è**.\n\n"
            "–í **–±–∞–∑–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏** —è —Ñ–∏–∫—Å–∏—Ä—É—é —Ç–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –∫–æ–º–∞–Ω–¥—ã, —Å—Ç–∏–ª—å, —Å—É–±–ª–∏—á–Ω–æ—Å—Ç–∏.\n"
            "–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∑–∞–¥–∞–Ω–∏—è, –º–µ–Ω—è—Ç—å —Ç–æ–Ω –æ–±—â–µ–Ω–∏—è –∏ –¥–µ—Ä–∂–∞—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ —Ç–≤–æ–µ–π —Ü–µ–ª–∏.\n\n"
            "–í **—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏** —è –Ω–∞—á–Ω—É:\n"
            "‚Ä¢ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç\n"
            "‚Ä¢ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å—Ç–∏–ª—å –º—ã—à–ª–µ–Ω–∏—è\n"
            "‚Ä¢ –¥–∞–≤–∞—Ç—å –æ—Ç—á—ë—Ç—ã, —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏\n\n"
            "üîπ –ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:\n"
            "‚Ä¢ –ù–∞–ø–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äî —è –æ—Ç—Ä–µ–∞–≥–∏—Ä—É—é –≤ —Ç–≤–æ—ë–º —Å—Ç–∏–ª–µ\n"
            "‚Ä¢ –ü–æ–ª—É—á–∏ –∑–∞–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ /task\n"
            "‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ—é ‚Äî –∫–æ–º–∞–Ω–¥–∞ /—Ç–µ–∫—Å—Ç\n"
            "‚Ä¢ –°–º–µ–Ω–∏—Ç—å —Å—É–±–ª–∏—á–Ω–æ—Å—Ç—å ‚Äî –∫–æ–º–∞–Ω–¥–∞ /–ø—Ä–æ—Ñ–∏–ª—å\n\n"
            "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ù–∞–ø–∏—à–∏ –º–Ω–µ, –∏ —Ç—ã —É–≤–∏–¥–∏—à—å, —á—Ç–æ —è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è."
        )
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫—É—Ä–∞—Ç–æ—Ä—É.")
